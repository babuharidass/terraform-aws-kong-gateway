name: PR

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
env:
  TERRAFORM_VERSION: 0.14.7


jobs:
  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare SemVer
        id: prepare-semver
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          echo ::set-output name=latest_version_out::$LATEST_VERSION
          commit_message=$(cat commit_message.txt)
          echo $commit_message
          if [[ "${commit_message,,}" == *"major release"* ]]; then
            echo ::set-output name=semver_increment::"m"
          elif [[ "${commit_message,,}" == *"minor release"* ]]; then
            echo ::set-output name=semver_increment::"i"
          else
            echo ::set-output name=semver_increment::"p"
          fi
      - name: Increment SemVer
        id: semver
        uses: matt-FFFFFF/simple-semver@v0.1.0
        with:
          semver-input: ${{ steps.prepare-semver.outputs.latest_version_out }}
          increment: ${{ steps.prepare-semver.outputs.semver_increment }}
      - name: Get publish version
        id: get-publish-version
        run: echo "::set-output name=publish-version::${{ steps.semver.outputs.semver }}"

  format:
    name: Terraform-Format
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive
        continue-on-error: true

  test:
    name: Kitchen-Terraform
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      GEMFILE_DIR: .
      AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
      TF_VAR_region: eu-west-1
      TF_VAR_vpc_cidr_block: "10.0.0.0/16"
      TF_VAR_kong_database_password: ${{ secrets.KONG_DATABASE_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Kitchen Test hybrid-external-database
        uses: dwp/github-action-kitchen-terraform@0.14.7
        with:
          kitchen-command: test hybrid-external-database --destroy=always
          aws-account-number: ${{ secrets.AWS_ACCOUNT }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
          TF_VAR_region: eu-west-1
          TF_VAR_environment: GHA-${{ env.GITHUB_RUN_NUMBER }}
          TF_VAR_vpc_cidr_block: "10.0.0.0/16"
          TF_VAR_kong_database_password: ${{ secrets.KONG_DATABASE_PASSWORD }}
